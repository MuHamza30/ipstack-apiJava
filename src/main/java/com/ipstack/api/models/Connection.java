/*
 * IPstackAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.ipstack.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for Connection type.
 */
public class Connection {
    private Integer asn;
    private String isp;

    /**
     * Default constructor.
     */
    public Connection() {
    }

    /**
     * Initialization constructor.
     * @param  asn  Integer value for asn.
     * @param  isp  String value for isp.
     */
    public Connection(
            Integer asn,
            String isp) {
        this.asn = asn;
        this.isp = isp;
    }

    /**
     * Getter for Asn.
     * The ASN number
     * @return Returns the Integer
     */
    @JsonGetter("asn")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getAsn() {
        return asn;
    }

    /**
     * Setter for Asn.
     * The ASN number
     * @param asn Value for Integer
     */
    @JsonSetter("asn")
    public void setAsn(Integer asn) {
        this.asn = asn;
    }

    /**
     * Getter for Isp.
     * The ISP name
     * @return Returns the String
     */
    @JsonGetter("isp")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getIsp() {
        return isp;
    }

    /**
     * Setter for Isp.
     * The ISP name
     * @param isp Value for String
     */
    @JsonSetter("isp")
    public void setIsp(String isp) {
        this.isp = isp;
    }

    /**
     * Converts this Connection into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Connection [" + "asn=" + asn + ", isp=" + isp + "]";
    }

    /**
     * Builds a new {@link Connection.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Connection.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .asn(getAsn())
                .isp(getIsp());
        return builder;
    }

    /**
     * Class to build instances of {@link Connection}.
     */
    public static class Builder {
        private Integer asn;
        private String isp;



        /**
         * Setter for asn.
         * @param  asn  Integer value for asn.
         * @return Builder
         */
        public Builder asn(Integer asn) {
            this.asn = asn;
            return this;
        }

        /**
         * Setter for isp.
         * @param  isp  String value for isp.
         * @return Builder
         */
        public Builder isp(String isp) {
            this.isp = isp;
            return this;
        }

        /**
         * Builds a new {@link Connection} object using the set fields.
         * @return {@link Connection}
         */
        public Connection build() {
            return new Connection(asn, isp);
        }
    }
}
