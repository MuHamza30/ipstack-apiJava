/*
 * IPstackAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.ipstack.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for Currency type.
 */
public class Currency {
    private String code;
    private String name;
    private String plural;
    private String symbol;
    private String symbolNative;

    /**
     * Default constructor.
     */
    public Currency() {
    }

    /**
     * Initialization constructor.
     * @param  code  String value for code.
     * @param  name  String value for name.
     * @param  plural  String value for plural.
     * @param  symbol  String value for symbol.
     * @param  symbolNative  String value for symbolNative.
     */
    public Currency(
            String code,
            String name,
            String plural,
            String symbol,
            String symbolNative) {
        this.code = code;
        this.name = name;
        this.plural = plural;
        this.symbol = symbol;
        this.symbolNative = symbolNative;
    }

    /**
     * Getter for Code.
     * The currency code
     * @return Returns the String
     */
    @JsonGetter("code")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCode() {
        return code;
    }

    /**
     * Setter for Code.
     * The currency code
     * @param code Value for String
     */
    @JsonSetter("code")
    public void setCode(String code) {
        this.code = code;
    }

    /**
     * Getter for Name.
     * The currency name
     * @return Returns the String
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * The currency name
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Plural.
     * The currency plural form
     * @return Returns the String
     */
    @JsonGetter("plural")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getPlural() {
        return plural;
    }

    /**
     * Setter for Plural.
     * The currency plural form
     * @param plural Value for String
     */
    @JsonSetter("plural")
    public void setPlural(String plural) {
        this.plural = plural;
    }

    /**
     * Getter for Symbol.
     * The currency symbol
     * @return Returns the String
     */
    @JsonGetter("symbol")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSymbol() {
        return symbol;
    }

    /**
     * Setter for Symbol.
     * The currency symbol
     * @param symbol Value for String
     */
    @JsonSetter("symbol")
    public void setSymbol(String symbol) {
        this.symbol = symbol;
    }

    /**
     * Getter for SymbolNative.
     * The native currency symbol
     * @return Returns the String
     */
    @JsonGetter("symbol_native")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSymbolNative() {
        return symbolNative;
    }

    /**
     * Setter for SymbolNative.
     * The native currency symbol
     * @param symbolNative Value for String
     */
    @JsonSetter("symbol_native")
    public void setSymbolNative(String symbolNative) {
        this.symbolNative = symbolNative;
    }

    /**
     * Converts this Currency into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Currency [" + "code=" + code + ", name=" + name + ", plural=" + plural + ", symbol="
                + symbol + ", symbolNative=" + symbolNative + "]";
    }

    /**
     * Builds a new {@link Currency.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Currency.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .code(getCode())
                .name(getName())
                .plural(getPlural())
                .symbol(getSymbol())
                .symbolNative(getSymbolNative());
        return builder;
    }

    /**
     * Class to build instances of {@link Currency}.
     */
    public static class Builder {
        private String code;
        private String name;
        private String plural;
        private String symbol;
        private String symbolNative;



        /**
         * Setter for code.
         * @param  code  String value for code.
         * @return Builder
         */
        public Builder code(String code) {
            this.code = code;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for plural.
         * @param  plural  String value for plural.
         * @return Builder
         */
        public Builder plural(String plural) {
            this.plural = plural;
            return this;
        }

        /**
         * Setter for symbol.
         * @param  symbol  String value for symbol.
         * @return Builder
         */
        public Builder symbol(String symbol) {
            this.symbol = symbol;
            return this;
        }

        /**
         * Setter for symbolNative.
         * @param  symbolNative  String value for symbolNative.
         * @return Builder
         */
        public Builder symbolNative(String symbolNative) {
            this.symbolNative = symbolNative;
            return this;
        }

        /**
         * Builds a new {@link Currency} object using the set fields.
         * @return {@link Currency}
         */
        public Currency build() {
            return new Currency(code, name, plural, symbol, symbolNative);
        }
    }
}
