/*
 * IPstackAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.ipstack.api.models;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.TreeMap;


/**
 * Language1Enum to be used.
 */
public enum Language1Enum {
    EN,

    DE,

    ES,

    FR,

    JA,

    PTBR,

    RU,

    ZH;


    private static TreeMap<String, Language1Enum> valueMap = new TreeMap<>();
    private String value;

    static {
        EN.value = "en";
        DE.value = "de";
        ES.value = "es";
        FR.value = "fr";
        JA.value = "ja";
        PTBR.value = "pt-br";
        RU.value = "ru";
        ZH.value = "zh";

        valueMap.put("en", EN);
        valueMap.put("de", DE);
        valueMap.put("es", ES);
        valueMap.put("fr", FR);
        valueMap.put("ja", JA);
        valueMap.put("pt-br", PTBR);
        valueMap.put("ru", RU);
        valueMap.put("zh", ZH);
    }

    /**
     * Returns the enum member associated with the given string value.
     * @param toConvert String value to get enum member.
     * @return The enum member against the given string value.
     * @throws IOException when provided value is not mapped to any enum member.
     */
    @JsonCreator
    public static Language1Enum constructFromString(String toConvert) throws IOException {
        Language1Enum enumValue = fromString(toConvert);
        if (enumValue == null) {
            throw new IOException("Unable to create enum instance with value: " + toConvert);
        }
        return enumValue;
    }

    /**
     * Returns the enum member associated with the given string value.
     * @param toConvert String value to get enum member.
     * @return The enum member against the given string value.
     */
    public static Language1Enum fromString(String toConvert) {
        return valueMap.get(toConvert);
    }

    /**
     * Returns the string value associated with the enum member.
     * @return The string value against enum member.
     */
    @JsonValue
    public String value() {
        return value;
    }
        
    /**
     * Get string representation of this enum.
     */
    @Override
    public String toString() {
        return value.toString();
    }

    /**
     * Convert list of Language1Enum values to list of string values.
     * @param toConvert The list of Language1Enum values to convert.
     * @return List of representative string values.
     */
    public static List<String> toValue(List<Language1Enum> toConvert) {
        if (toConvert == null) {
            return null;
        }
        List<String> convertedValues = new ArrayList<>();
        for (Language1Enum enumValue : toConvert) {
            convertedValues.add(enumValue.value);
        }
        return convertedValues;
    }
} 